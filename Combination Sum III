void combinationSum_helper(int s,int k,int n,vector<int>& sum,vector<vector<int>>& result){
        if(sum.size()==k){
            if(n==0){
                result.push_back(sum);
            }
            return;
        }

        for(int i=s;i<=9;i++){
            if(i>n) break;
            sum.push_back(i);
            combinationSum_helper(i+1,k,n-i,sum,result);
            sum.pop_back();
        }

    }
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> result;
        vector<int> sum;
        combinationSum_helper(1,k,n,sum,result);

        return result;
    }
