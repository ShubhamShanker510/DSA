string minWindow(string s, string t) {
        unordered_map<char, int> freq;
        
        // Populate map with t string;
        for (char c : t) {
            freq[c]++;
        }
        
        int uniqueCharCount = freq.size();
        int startIndex = -1;
        int windowStart = 0;
        int minlength = INT_MAX;
        int n = s.size();
        
        for (int windowEnd = 0; windowEnd < n; windowEnd++) {
            char ch = s[windowEnd];
            
            if (freq.find(ch) != freq.end()) {
                freq[ch]--;
                if (freq[ch] == 0) {
                    uniqueCharCount--;
                }
            }
            
            while (uniqueCharCount == 0) {
                int len = windowEnd - windowStart + 1;
                if (len < minlength) {
                    minlength = len;
                    startIndex = windowStart;
                }
                
                char startChar = s[windowStart];
                if (freq.find(startChar) != freq.end()) {
                    freq[startChar]++;
                    if (freq[startChar] > 0) {
                        uniqueCharCount++;
                    }
                }
                windowStart++;
            }
        }
        
        if (startIndex == -1) {
            return "";
        }
        
        return s.substr(startIndex, minlength);
        
    }
