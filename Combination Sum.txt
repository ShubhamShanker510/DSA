vector<vector<int>> ans;
    void solve(int i,vector<int>& arr,vector<int>& temp,int target){
            
            //target is zero
            if(target==0){
                ans.push_back(temp);
                return;
            }

            if(target<0) return;

            if(i==arr.size()) return;
            
            //not including
            solve(i+1,arr,temp,target);

            temp.push_back(arr[i]);
            //including
            solve(i,arr,temp,target-arr[i]);
            // while return call
            temp.pop_back();
        
            
            }

vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        ans.clear();

        vector<int> temp;
        solve(0,candidates,temp,target);

        return ans;
    }