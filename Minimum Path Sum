 int f(int i,int j,vector<vector<int>>& grid,vector<vector<int>>& memo){
        if(i==0 && j==0) return grid[i][j];

        if(i<0 || j<0) return INT_MAX;

        if(memo[i][j]!=-1) return memo[i][j];
        int up = (i - 1 >= 0) ? f(i-1, j, grid, memo) : INT_MAX;
        int left = (j - 1 >= 0) ? f(i, j-1, grid, memo) : INT_MAX;

        
        if (up == INT_MAX && left == INT_MAX)
            return INT_MAX;

        
        return memo[i][j] = grid[i][j] + min(up, left);


    }
    int minPathSum(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>memo(n, vector<int>(m,-1));

        return f(n-1,m-1,grid,memo);
    }
